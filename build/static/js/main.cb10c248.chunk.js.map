{"version":3,"sources":["components/Urls.js","components/Loader.js","components/Form.js","index.js"],"names":["Urls","shortUrl","longUrl","fun","className","href","onClick","LoaderAnimation","color","height","width","Form","Submit","changeurl","onChange","e","target","value","name","autoComplete","placeholder","type","Index","useState","Url","changeState","sendingUrl","textToCopy","changeText","alert","changeAlert","isloading","changeloading","CopyText","copy","Loader","fetch","method","body","JSON","stringify","fullurl","headers","then","response","json","short","prevstate","length","slice","map","index","ReactDOM","render","document","getElementById"],"mappings":"gRAeeA,G,MAXF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,SAASC,EAAgB,EAAhBA,QAAQC,EAAQ,EAARA,IAE5B,OACI,yBAAKC,UAAU,OACf,2BAAG,uBAAGA,UAAU,SAAQC,KAAMH,GAAUA,IACxC,2BAAG,uBAAGE,UAAU,UAAUC,KAAM,8BAA8BJ,GAAWA,IACzE,uBAAGI,KAAK,IAAID,UAAU,QAAOE,QAASH,GAAtC,W,gBCEOI,G,MATS,WAChB,OACI,kBAAC,IAAD,CAAQH,UAAU,SACRI,MAAM,UACNC,OAAO,OACPC,MAAM,WCWbC,G,MAfF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UAClB,OACA,yBAAKT,UAAU,QACT,2BAAOA,UAAU,QACjBU,SAAY,SAACC,GAAD,OAAKF,EAAUE,EAAEC,OAAOC,QACpCC,KAAK,UACLC,aAAa,MACbC,YAAY,oBACZC,KAAK,SACL,4BAAQjB,UAAU,MAAME,QAASM,GAAjC,a,gBCJJU,G,YAAS,WAAK,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACNC,EADM,OAEcF,mBAAS,IAFvB,mBAEVG,EAFU,KAECb,EAFD,OAGeU,mBAAS,IAHxB,mBAGVI,EAHU,KAGCC,EAHD,OAIYL,qBAJZ,mBAIVM,EAJU,KAIJC,EAJI,OAKiBP,oBAAS,GAL1B,mBAKVQ,EALU,KAKAC,EALA,KAqCXC,EAAW,SAAClB,GAChBmB,IAAK,sBAAsBP,IAE7B,OACE,kBAAC,WAAD,KACE,yBAAKvB,UAAU,eACb,uBAAGA,UAAU,WAAb,iBAEJ,yBAAKA,UAAU,aACZyB,EAAM,yBAAKzB,UAAU,SAAf,gBAA0C,GAChD2B,EAAU,kBAACI,EAAD,MAAmB,GAC9B,kBAAC,EAAD,CAAMvB,OAzCK,WACVc,GACDI,GAAY,GACZE,GAAc,GACdI,MAAM,wCAAwC,CAC5CC,OAAO,OACPC,KAAMC,KAAKC,UACT,CACEC,QAAQf,IAGZgB,QAAS,CACP,eAAgB,qCAGnBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAASE,GAGb,OAFAjB,EAAWiB,EAAKC,OAChBd,GAAc,GACPP,GAAY,SAAAsB,GAAS,4BACxBA,GADwB,CAE5B,CAAC7C,QAAQwB,EAAWsB,OAAO,GAAGtB,EAAWA,EAAWuB,MAAM,EAAE,IAAI,MAC9DhD,SAAS4C,EAAKC,gBAKhBhB,GAAY,IAcQjB,UAAWA,IAEvBW,EAAI0B,KAAI,SAAShC,EAAMiC,GACjB,OACC,kBAAC,EAAD,CAAMjD,QAASgB,EAAKhB,QAASD,SAAUiB,EAAKjB,SAAUE,IAAK8B,WAQlFmB,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.cb10c248.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './styles/Url.css';\r\n\r\n\r\nconst Urls = ({shortUrl,longUrl,fun}) =>{\r\n    \r\n    return (\r\n        <div className=\"url\">\r\n        <p><a className=\"longid\"href={longUrl}>{longUrl}</a></p>\r\n        <p><a className=\"shortid\" href={'https://nith.herokuapp.com/'+shortUrl}>{shortUrl}</a></p>\r\n        <a href=\"#\" className=\"btn-2\"onClick={fun}>Copy</a>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Urls;","import React from \"react\";\r\nimport Loader from 'react-loader-spinner'\r\nimport './styles/loader.css'\r\nconst LoaderAnimation = () => {\r\n        return(\r\n            <Loader className=\"loader\"\r\n                      color=\"#00BFFF\"\r\n                      height=\"50px\"\r\n                      width=\"50px\" />\r\n        )\r\n}\r\n\r\nexport default LoaderAnimation;","import React, { Fragment } from \"react\";\r\nimport './styles/Form.css';\r\n\r\n\r\nconst Form = ({Submit,changeurl}) => {\r\n    return(\r\n    <div className=\"form\">\r\n          <input className=\"input\"\r\n          onChange = {(e)=>changeurl(e.target.value)}\r\n          name=\"fullurl\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Shorten your link\" \r\n          type=\"text\"/>\r\n          <button className=\"btn\" onClick={Submit}>Shrink</button>\r\n      </div>\r\n  \r\n    )\r\n}\r\n\r\nexport default Form;","import React,{useState, Fragment} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Urls from './components/Urls';\nimport LoaderAnimation from './components/Loader';\nimport Form from './components/Form';\nimport copy from \"copy-to-clipboard\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\"\nimport './index.css';\n\nconst Index =  ()=>{\n  const [Url,changeState] = useState([])\n  const [sendingUrl,changeurl] = useState('')\n  const [textToCopy,changeText] = useState('')\n  const [alert,changeAlert]  = useState()\n  const [isloading,changeloading] = useState(false)   \n\n  const Submit = () =>{\n    if(sendingUrl){\n      changeAlert(false)\n      changeloading(true)\n      fetch(\"https://nith.herokuapp.com/shortUrls/\",{\n        method:\"POST\",\n        body: JSON.stringify(\n          {\n            fullurl:sendingUrl\n          }\n        ),\n        headers: { \n          \"Content-type\": \"application/json; charset=UTF-8\"\n      } \n      })  \n      .then(response => response.json())\n      .then(function(json){ \n        changeText(json.short)\n        changeloading(false)\n        return changeState(prevstate =>\n        [...prevstate, \n        {longUrl:sendingUrl.length<25?sendingUrl:sendingUrl.slice(0,25)+'...',\n          shortUrl:json.short}]\n     )}\n      )\n        }\n     else{\n        changeAlert(true)\n     }   \n  }\n  const CopyText = (e) =>{\n    copy('nith.herokuapp.com/'+textToCopy); \n  }\n  return(\n    <Fragment>\n      <div className=\"heading-div\">\n        <p className=\"heading\">Url Shrinker</p>\n      </div>\n    <div className=\"container\">\n      {alert?<div className=\"alert\">Enter a Url!</div>:''}\n      {isloading?<LoaderAnimation/>:''}\n      <Form Submit={Submit} changeurl={changeurl}/>\n                {\n                Url.map(function(name, index){\n                      return(\n                       <Urls longUrl={name.longUrl} shortUrl={name.shortUrl} fun={CopyText}/>\n                      )\n                  })}\n      </div>\n      </Fragment>\n  )\n  }\n\nReactDOM.render(<Index />,document.getElementById(\"root\"))"],"sourceRoot":""}