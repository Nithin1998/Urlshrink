{"version":3,"sources":["components/Urls.js","components/Form.js","index.js"],"names":["Urls","shortUrl","longUrl","fun","className","href","onClick","Form","Submit","changeurl","onChange","e","target","value","name","autoComplete","placeholder","type","Index","useState","Url","changeState","sendingUrl","textToCopy","changeText","alert","changeAlert","CopyText","copy","fetch","method","body","JSON","stringify","fullurl","headers","then","response","json","short","prevstate","length","slice","map","index","ReactDOM","render","document","getElementById"],"mappings":"yPAeeA,G,MAXF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,SAASC,EAAgB,EAAhBA,QAAQC,EAAQ,EAARA,IAE5B,OACI,yBAAKC,UAAU,OACf,2BAAG,uBAAGA,UAAU,SAAQC,KAAMH,GAAUA,IACxC,2BAAG,uBAAGE,UAAU,UAAUC,KAAM,8BAA8BJ,GAAWA,IACzE,4BAAQG,UAAU,QAAOE,QAASH,GAAlC,WCSOI,G,MAfF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UAClB,OACA,yBAAKL,UAAU,QACT,2BAAOA,UAAU,QACjBM,SAAY,SAACC,GAAD,OAAKF,EAAUE,EAAEC,OAAOC,QACpCC,KAAK,UACLC,aAAa,MACbC,YAAY,oBACZC,KAAK,SACL,4BAAQb,UAAU,MAAME,QAASE,GAAjC,a,gBCNJU,G,MAAS,WAAK,IAAD,EACSC,mBAAS,IADlB,mBACVC,EADU,KACNC,EADM,OAEcF,mBAAS,IAFvB,mBAEVG,EAFU,KAECb,EAFD,OAGeU,mBAAS,IAHxB,mBAGVI,EAHU,KAGCC,EAHD,OAIYL,qBAJZ,mBAIVM,EAJU,KAIJC,EAJI,KAiCXC,EAAW,WACfC,IAAK,sBAAsBL,IAE7B,OACE,kBAAC,WAAD,KACE,yBAAKnB,UAAU,eACb,uBAAGA,UAAU,WAAb,iBAEJ,yBAAKA,UAAU,aACZqB,EAAM,6CAAwB,GAC/B,kBAAC,EAAD,CAAMjB,OAtCK,WACVc,GACDI,GAAY,GACZG,MAAM,wCAAwC,CAC5CC,OAAO,OACPC,KAAMC,KAAKC,UACT,CACEC,QAAQZ,IAGZa,QAAS,CACP,eAAgB,qCAGnBC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAASE,GAEb,OADAd,EAAWc,EAAKC,OACTlB,GAAY,SAAAmB,GAAS,4BACxBA,GADwB,CAE5B,CAACtC,QAAQoB,EAAWmB,OAAO,GAAGnB,EAAWA,EAAWoB,MAAM,EAAE,IAAI,MAC9DzC,SAASqC,EAAKC,gBAKhBb,GAAY,IAaQjB,UAAWA,IACtBW,EAAIuB,KAAI,SAAS7B,EAAM8B,GAClB,OACC,kBAAC,EAAD,CAAM1C,QAASY,EAAKZ,QAASD,SAAUa,EAAKb,SAAUE,IAAKwB,WAQlFkB,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.cd779d32.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './styles/Url.css';\r\n\r\n\r\nconst Urls = ({shortUrl,longUrl,fun}) =>{\r\n    \r\n    return (\r\n        <div className=\"url\">\r\n        <p><a className=\"longid\"href={longUrl}>{longUrl}</a></p>\r\n        <p><a className=\"shortid\" href={'https://nith.herokuapp.com/'+shortUrl}>{shortUrl}</a></p>\r\n        <button className=\"btn-2\"onClick={fun}>Copy</button>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Urls;","import React, { Fragment } from \"react\";\r\nimport './styles/Form.css';\r\n\r\n\r\nconst Form = ({Submit,changeurl}) => {\r\n    return(\r\n    <div className=\"form\">\r\n          <input className=\"input\"\r\n          onChange = {(e)=>changeurl(e.target.value)}\r\n          name=\"fullurl\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Shorten your link\" \r\n          type=\"text\"/>\r\n          <button className=\"btn\" onClick={Submit}>Shrink</button>\r\n      </div>\r\n  \r\n    )\r\n}\r\n\r\nexport default Form;","import React,{useState, Fragment} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Urls from './components/Urls';\nimport Form from './components/Form'\nimport copy from \"copy-to-clipboard\";\nimport './index.css';\n\nconst Index =  ()=>{\n  const [Url,changeState] = useState([])\n  const [sendingUrl,changeurl] = useState('')\n  const [textToCopy,changeText] = useState('')\n  const [alert,changeAlert]  = useState()\n  const Submit = () =>{\n    if(sendingUrl){\n      changeAlert(false)\n      fetch(\"https://nith.herokuapp.com/shortUrls/\",{\n        method:\"POST\",\n        body: JSON.stringify(\n          {\n            fullurl:sendingUrl\n          }\n        ),\n        headers: { \n          \"Content-type\": \"application/json; charset=UTF-8\"\n      } \n      })  \n      .then(response => response.json())\n      .then(function(json){ \n        changeText(json.short)\n        return changeState(prevstate =>\n        [...prevstate, \n        {longUrl:sendingUrl.length<30?sendingUrl:sendingUrl.slice(0,30)+'...',\n          shortUrl:json.short}]\n     )}\n      )\n        }\n     else{\n        changeAlert(true)\n     }   \n  }\n  const CopyText = () =>{\n    copy('nith.herokuapp.com/'+textToCopy); \n  }\n  return(\n    <Fragment>\n      <div className=\"heading-div\">\n        <p className=\"heading\">Url Shrinker</p>\n      </div>\n    <div className=\"container\">\n      {alert?<div>Enter a Url!</div>:''}\n      <Form Submit={Submit} changeurl={changeurl}/>\n                {Url.map(function(name, index){\n                      return(\n                       <Urls longUrl={name.longUrl} shortUrl={name.shortUrl} fun={CopyText}/>\n                      )\n                  })}\n      </div>\n      </Fragment>\n  )\n  }\n\nReactDOM.render(<Index />,document.getElementById(\"root\"))"],"sourceRoot":""}