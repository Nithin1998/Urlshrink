{"version":3,"sources":["components/Urls.js","components/Loader.js","components/Form.js","index.js"],"names":["Urls","shortUrl","longUrl","fun","Url","className","href","onClick","LoaderAnimation","color","height","width","Form","Submit","changeurl","onChange","e","target","value","name","autoComplete","placeholder","type","Index","useState","changeState","sendingUrl","textToCopy","changeText","alert","changeAlert","isloading","changeloading","CopyText","copy","Loader","fetch","method","body","JSON","stringify","fullurl","headers","then","response","status","Error","json","short","prevstate","length","slice","catch","err","console","log","map","index","key","ReactDOM","render","document","getElementById"],"mappings":"gRAeeA,G,MAXF,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,SAASC,EAAgB,EAAhBA,QAAQC,EAAQ,EAARA,IACxBC,EAAM,eAAeH,EACzB,OACI,yBAAKI,UAAU,OACf,2BAAG,uBAAGA,UAAU,SAAQC,KAAMJ,GAAUA,IACxC,2BAAG,uBAAGG,UAAU,UAAUC,KAAM,8BAA8BL,GAAWG,IACzE,uBAAGE,KAAK,IAAID,UAAU,QAAOE,QAASJ,GAAtC,W,gBCGOK,G,MATS,WAChB,OACI,kBAAC,IAAD,CAAQH,UAAU,SACRI,MAAM,UACNC,OAAO,OACPC,MAAM,WCSbC,G,MAfF,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,OAAOC,EAAe,EAAfA,UAClB,OACA,yBAAKT,UAAU,QACT,2BAAOA,UAAU,aACjBU,SAAY,SAACC,GAAD,OAAKF,EAAUE,EAAEC,OAAOC,QACpCC,KAAK,UACLC,aAAa,MACbC,YAAY,oBACZC,KAAK,SACL,4BAAQjB,UAAU,MAAME,QAASM,GAAjC,a,gBCDJU,G,YAAS,WAAK,IAAD,EAESC,mBAAS,IAFlB,mBAEVpB,EAFU,KAENqB,EAFM,OAGcD,mBAAS,IAHvB,mBAGVE,EAHU,KAGCZ,EAHD,OAIeU,mBAAS,IAJxB,mBAIVG,EAJU,KAICC,EAJD,OAKYJ,qBALZ,mBAKVK,EALU,KAKJC,EALI,OAMiBN,oBAAS,GAN1B,mBAMVO,EANU,KAMAC,EANA,KAiDXC,EAAW,SAACjB,GAChBkB,IAAK,sBAAsBP,IAG7B,OACE,kBAAC,WAAD,KACE,yBAAKtB,UAAU,eACb,uBAAGA,UAAU,WAAb,gBAEJ,yBAAKA,UAAU,aACZwB,EAAM,yBAAKxB,UAAU,SAAf,sBAAgD,GACtD0B,EAAU,kBAACI,EAAD,MAAmB,GAC9B,kBAAC,EAAD,CAAMtB,OApDK,SAACG,GACXU,GACDI,GAAY,GACZE,GAAc,GACdI,MAAM,wCAAwC,CAC5CC,OAAO,OACPC,KAAMC,KAAKC,UACT,CACEC,QAAQf,IAGZgB,QAAS,CACP,eAAgB,qCAGnBC,MAAK,SAAUC,GACd,GAAqB,MAAlBA,EAASC,OAGJ,MAFAf,GAAY,GACZE,GAAc,GACR,IAAIc,MAAM,SAExB,OAAOF,EAASG,UAEjBJ,MAAK,SAASI,GAGb,OAFAnB,EAAWmB,EAAKC,OAChBhB,GAAc,GACPP,GAAY,SAAAwB,GAAS,4BACxBA,GADwB,CAE5B,CAAC/C,QAAQwB,EAAWwB,OAAO,GAAGxB,EAAWA,EAAWyB,MAAM,EAAE,IAAI,MAC9DlD,SAAS8C,EAAKC,eAEhBI,OAAM,SAAAC,GAAG,OAAEC,QAAQC,IAAI,aAIvBzB,GAAY,IAiBQhB,UAAWA,IAEvBV,EAAIoD,KAAI,SAASrC,EAAMsC,GACjB,OACC,kBAAC,EAAD,CAAMC,IAAKD,EAAOvD,QAASiB,EAAKjB,QAASD,SAAUkB,EAAKlB,SAAUE,IAAK8B,WAQ9F0B,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,W","file":"static/js/main.bc3da4de.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './styles/Url.css';\r\n\r\n// renders the long urls and short urls\r\nconst Urls = ({shortUrl,longUrl,fun}) =>{\r\n    let Url = 'nith.heroku/'+shortUrl;\r\n    return (\r\n        <div className=\"url\">\r\n        <p><a className=\"longid\"href={longUrl}>{longUrl}</a></p>\r\n        <p><a className=\"shortid\" href={'https://nith.herokuapp.com/'+shortUrl}>{Url}</a></p>\r\n        <a href=\"#\" className=\"btn-2\"onClick={fun}>Copy</a>\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Urls;","import React from \"react\";\r\nimport Loader from 'react-loader-spinner'\r\nimport './styles/loader.css'\r\n\r\nconst LoaderAnimation = () => {\r\n        return(\r\n            <Loader className=\"loader\"\r\n                      color=\"#00BFFF\"\r\n                      height=\"50px\"\r\n                      width=\"50px\" />\r\n        )\r\n}\r\n\r\nexport default LoaderAnimation;","import React, { Fragment } from \"react\";\r\nimport './styles/Form.css';\r\n\r\nconst Form = ({Submit,changeurl}) => {\r\n    return(\r\n    <div className=\"form\">\r\n          <input className=\"form-input\"\r\n          onChange = {(e)=>changeurl(e.target.value)}\r\n          name=\"fullurl\"\r\n          autoComplete=\"off\"\r\n          placeholder=\"Shorten your link\" \r\n          type=\"text\"/>\r\n          <button className=\"btn\" onClick={Submit}>Shrink</button>\r\n      </div>\r\n  \r\n    )\r\n}\r\n\r\nexport default Form;","import React,{useState, Fragment} from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Urls from './components/Urls';\nimport LoaderAnimation from './components/Loader';\nimport Form from './components/Form';\nimport copy from \"copy-to-clipboard\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport './index.css';\n\n\n//Main Component\nconst Index =  ()=>{\n  \n  const [Url,changeState] = useState([])\n  const [sendingUrl,changeurl] = useState('')\n  const [textToCopy,changeText] = useState('')\n  const [alert,changeAlert]  = useState()\n  const [isloading,changeloading] = useState(false)   \n\n  //Function that handles post request to the api\n  const Submit = (e) =>{\n    if(sendingUrl){\n      changeAlert(false)\n      changeloading(true)\n      fetch(\"https://nith.herokuapp.com/shortUrls/\",{\n        method:\"POST\",\n        body: JSON.stringify(\n          {\n            fullurl:sendingUrl\n          }\n        ),\n        headers: { \n          \"Content-type\": \"application/json; charset=UTF-8\"\n      } \n      })  \n      .then(function (response){ \n        if(response.status===404){\n                changeAlert(true)\n                changeloading(false)\n                throw new Error('error')}\n        else{\n        return response.json()}\n      })\n      .then(function(json){ \n        changeText(json.short)\n        changeloading(false)\n        return changeState(prevstate =>\n        [...prevstate, \n        {longUrl:sendingUrl.length<25?sendingUrl:sendingUrl.slice(0,25)+'...',\n          shortUrl:json.short}]\n     )}\n      ).catch(err=>console.log(\"error\"))\n        }\n\n     else{\n        changeAlert(true)\n     }   \n  }\n\n  // function to copy text\n  const CopyText = (e) =>{\n    copy('nith.herokuapp.com/'+textToCopy); \n  }\n\n  return(\n    <Fragment>\n      <div className=\"heading-div\">\n        <p className=\"heading\">nith.heroku</p>\n      </div>\n    <div className=\"container\">\n      {alert?<div className=\"alert\">Enter a valid Url!</div>:''}\n      {isloading?<LoaderAnimation/>:''}\n      <Form Submit={Submit} changeurl={changeurl}/>\n                {\n                Url.map(function(name, index){\n                      return(\n                       <Urls key={index} longUrl={name.longUrl} shortUrl={name.shortUrl} fun={CopyText}/>\n                      )\n                  })}\n      </div>\n      </Fragment>\n  )\n  }\n\nReactDOM.render(<Index />,document.getElementById(\"root\"))"],"sourceRoot":""}